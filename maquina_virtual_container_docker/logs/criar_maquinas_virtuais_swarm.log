##########################################################################
# COMEÇO DO SCRIPT criar_maquinas_virtuais_swarm em: 2021-10-19 às 01:11:05. #
##########################################################################


INÍCIO DO VAGRANT, MÁQUINA docker_manager: 2021-10-19 às 01:11:05.
Bringing machine 'docker_manager' up with 'virtualbox' provider...
==> docker_manager: Box 'ubuntu/focal64' could not be found. Attempting to find and install...
    docker_manager: Box Provider: virtualbox
    docker_manager: Box Version: >= 0
==> docker_manager: Loading metadata for box 'ubuntu/focal64'
    docker_manager: URL: https://vagrantcloud.com/ubuntu/focal64
==> docker_manager: Adding box 'ubuntu/focal64' (v20211015.0.0) for provider: virtualbox
    docker_manager: Downloading: https://vagrantcloud.com/ubuntu/boxes/focal64/versions/20211015.0.0/providers/virtualbox.box
[KProgress: 0% (Rate: 0*/s, Estimated time remaining: --:--:--)[KProgress: 100% (Rate: 185/s, Estimated time remaining: --:--:--)[KDownload redirected to host: cloud-images.ubuntu.com
[KProgress: 100% (Rate: 112/s, Estimated time remaining: --:--:--)[KProgress: 0% (Rate: 0*/s, Estimated time remaining: --:--:--)[KProgress: 0% (Rate: 16367/s, Estimated time remaining: 24:37:56)[KProgress: 0% (Rate: 128k/s, Estimated time remaining: 2:10:16)[KProgress: 0% (Rate: 903k/s, Estimated time remaining: 0:15:23)[KProgress: 2% (Rate: 2992k/s, Estimated time remaining: 0:04:07)[KProgress: 3% (Rate: 4270k/s, Estimated time remaining: 0:02:40)[KProgress: 5% (Rate: 6158k/s, Estimated time remaining: 0:02:05)[KProgress: 7% (Rate: 7796k/s, Estimated time remaining: 0:01:47)[KProgress: 9% (Rate: 9356k/s, Estimated time remaining: 0:01:33)[KProgress: 11% (Rate: 9414k/s, Estimated time remaining: 0:01:25)[KProgress: 12% (Rate: 8565k/s, Estimated time remaining: 0:01:24)[KProgress: 13% (Rate: 8325k/s, Estimated time remaining: 0:01:20)[KProgress: 14% (Rate: 7552k/s, Estimated time remaining: 0:01:20)[KProgress: 16% (Rate: 7196k/s, Estimated time remaining: 0:01:16)[KProgress: 17% (Rate: 6980k/s, Estimated time remaining: 0:01:13)[KProgress: 19% (Rate: 7523k/s, Estimated time remaining: 0:01:10)[KProgress: 20% (Rate: 7756k/s, Estimated time remaining: 0:01:07)[KProgress: 22% (Rate: 8038k/s, Estimated time remaining: 0:01:05)[KProgress: 23% (Rate: 8041k/s, Estimated time remaining: 0:01:03)[KProgress: 25% (Rate: 8240k/s, Estimated time remaining: 0:01:00)[KProgress: 26% (Rate: 8090k/s, Estimated time remaining: 0:00:59)[KProgress: 28% (Rate: 7948k/s, Estimated time remaining: 0:00:57)[KProgress: 30% (Rate: 8425k/s, Estimated time remaining: 0:00:55)[KProgress: 31% (Rate: 8222k/s, Estimated time remaining: 0:00:53)[KProgress: 32% (Rate: 7993k/s, Estimated time remaining: 0:00:52)[KProgress: 34% (Rate: 8316k/s, Estimated time remaining: 0:00:50)[KProgress: 35% (Rate: 7449k/s, Estimated time remaining: 0:00:50)[KProgress: 37% (Rate: 7328k/s, Estimated time remaining: 0:00:49)[KProgress: 38% (Rate: 7454k/s, Estimated time remaining: 0:00:47)[KProgress: 40% (Rate: 7641k/s, Estimated time remaining: 0:00:45)[KProgress: 41% (Rate: 7632k/s, Estimated time remaining: 0:00:44)[KProgress: 43% (Rate: 8116k/s, Estimated time remaining: 0:00:43)[KProgress: 44% (Rate: 8008k/s, Estimated time remaining: 0:00:42)[KProgress: 46% (Rate: 7948k/s, Estimated time remaining: 0:00:40)[KProgress: 47% (Rate: 7496k/s, Estimated time remaining: 0:00:40)[KProgress: 49% (Rate: 7555k/s, Estimated time remaining: 0:00:38)[KProgress: 50% (Rate: 8044k/s, Estimated time remaining: 0:00:37)[KProgress: 52% (Rate: 8130k/s, Estimated time remaining: 0:00:35)[KProgress: 53% (Rate: 8313k/s, Estimated time remaining: 0:00:34)[KProgress: 55% (Rate: 8299k/s, Estimated time remaining: 0:00:33)[KProgress: 56% (Rate: 7751k/s, Estimated time remaining: 0:00:32)[KProgress: 58% (Rate: 7820k/s, Estimated time remaining: 0:00:31)[KProgress: 59% (Rate: 7845k/s, Estimated time remaining: 0:00:29)[KProgress: 61% (Rate: 7732k/s, Estimated time remaining: 0:00:28)[KProgress: 62% (Rate: 7861k/s, Estimated time remaining: 0:00:27)[KProgress: 64% (Rate: 7903k/s, Estimated time remaining: 0:00:26)[KProgress: 65% (Rate: 7752k/s, Estimated time remaining: 0:00:25)[KProgress: 67% (Rate: 7808k/s, Estimated time remaining: 0:00:24)[KProgress: 68% (Rate: 7768k/s, Estimated time remaining: 0:00:23)[KProgress: 70% (Rate: 7864k/s, Estimated time remaining: 0:00:22)[KProgress: 71% (Rate: 7799k/s, Estimated time remaining: 0:00:21)[KProgress: 72% (Rate: 7782k/s, Estimated time remaining: 0:00:20)[KProgress: 74% (Rate: 7740k/s, Estimated time remaining: 0:00:18)[KProgress: 76% (Rate: 7747k/s, Estimated time remaining: 0:00:17)[KProgress: 77% (Rate: 8024k/s, Estimated time remaining: 0:00:16)[KProgress: 79% (Rate: 8506k/s, Estimated time remaining: 0:00:15)[KProgress: 80% (Rate: 8324k/s, Estimated time remaining: 0:00:14)[KProgress: 82% (Rate: 8043k/s, Estimated time remaining: 0:00:13)[KProgress: 83% (Rate: 8083k/s, Estimated time remaining: 0:00:12)[KProgress: 84% (Rate: 7621k/s, Estimated time remaining: 0:00:11)[KProgress: 86% (Rate: 7500k/s, Estimated time remaining: 0:00:10)[KProgress: 87% (Rate: 7658k/s, Estimated time remaining: 0:00:09)[KProgress: 89% (Rate: 7453k/s, Estimated time remaining: 0:00:08)[KProgress: 90% (Rate: 7619k/s, Estimated time remaining: 0:00:07)[KProgress: 91% (Rate: 7055k/s, Estimated time remaining: 0:00:06)[KProgress: 93% (Rate: 6923k/s, Estimated time remaining: 0:00:05)[KProgress: 94% (Rate: 6902k/s, Estimated time remaining: 0:00:04)[KProgress: 96% (Rate: 7348k/s, Estimated time remaining: 0:00:03)[KProgress: 97% (Rate: 6918k/s, Estimated time remaining: 0:00:02)[KProgress: 98% (Rate: 7874k/s, Estimated time remaining: 0:00:01)[K==> docker_manager: Successfully added box 'ubuntu/focal64' (v20211015.0.0) for 'virtualbox'!
==> docker_manager: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_manager: Matching MAC address for NAT networking...
==> docker_manager: Checking if box 'ubuntu/focal64' version '20211015.0.0' is up to date...
==> docker_manager: Setting the name of the VM: docker_manager
==> docker_manager: Clearing any previously set network interfaces...
==> docker_manager: Preparing network interfaces based on configuration...
    docker_manager: Adapter 1: nat
    docker_manager: Adapter 2: bridged
==> docker_manager: Forwarding ports...
    docker_manager: 22 (guest) => 2222 (host) (adapter 1)
==> docker_manager: Running 'pre-boot' VM customizations...
==> docker_manager: Booting VM...
==> docker_manager: Waiting for machine to boot. This may take a few minutes...
    docker_manager: SSH address: 127.0.0.1:2222
    docker_manager: SSH username: vagrant
    docker_manager: SSH auth method: private key
    docker_manager: Warning: Connection reset. Retrying...
    docker_manager: Warning: Remote connection disconnect. Retrying...
    docker_manager: 
    docker_manager: Vagrant insecure key detected. Vagrant will automatically replace
    docker_manager: this with a newly generated keypair for better security.
    docker_manager: 
    docker_manager: Inserting generated public key within guest...
    docker_manager: Removing insecure key from the guest if it's present...
    docker_manager: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_manager: Machine booted and ready!
==> docker_manager: Checking for guest additions in VM...
==> docker_manager: Configuring and enabling network interfaces...
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
    docker_manager: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_manager: + sh -c apt-get update -qq >/dev/null
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_manager: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_manager: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_manager: + sh -c apt-get update -qq >/dev/null
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_manager: + version_gte 20.10
    docker_manager: + [ -z  ]
    docker_manager: + return 0
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_manager: + sh -c docker version
    docker_manager: Client: Docker Engine - Community
    docker_manager:  Version:           20.10.9
    docker_manager:  API version:       1.41
    docker_manager:  Go version:        go1.16.8
    docker_manager:  Git commit:        c2ea9bc
    docker_manager:  Built:             Mon Oct  4 16:08:29 2021
    docker_manager:  OS/Arch:           linux/amd64
    docker_manager:  Context:           default
    docker_manager:  Experimental:      true
    docker_manager: 
    docker_manager: Server: Docker Engine - Community
    docker_manager:  Engine:
    docker_manager:   Version:          20.10.9
    docker_manager:   API version:      1.41 (minimum version 1.12)
    docker_manager:   Go version:       go1.16.8
    docker_manager:   Git commit:       79ea9d3
    docker_manager:   Built:            Mon Oct  4 16:06:37 2021
    docker_manager:   OS/Arch:          linux/amd64
    docker_manager:   Experimental:     false
    docker_manager:  containerd:
    docker_manager:   Version:          1.4.11
    docker_manager:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_manager:  runc:
    docker_manager:   Version:          1.0.2
    docker_manager:   GitCommit:        v1.0.2-0-g52b36a2
    docker_manager:  docker-init:
    docker_manager:   Version:          0.19.0
    docker_manager:   GitCommit:        de40ad0
    docker_manager: 
    docker_manager: ================================================================================
    docker_manager: 
    docker_manager: To run Docker as a non-privileged user, consider setting up the
    docker_manager: Docker daemon in rootless mode for your user:
    docker_manager: 
    docker_manager:     dockerd-rootless-setuptool.sh install
    docker_manager: 
    docker_manager: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_manager: 
    docker_manager: 
    docker_manager: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_manager: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_manager: 
    docker_manager: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_manager:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_manager:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_manager: 
    docker_manager: ================================================================================
    docker_manager: 
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
FIM DO VAGRANT, MÁQUINA docker_manager: 2021-10-19 às 01:13:47.
INÍCIO DO VAGRANT, MÁQUINA docker_worker_1: 2021-10-19 às 01:13:52.
Bringing machine 'docker_worker_1' up with 'virtualbox' provider...
==> docker_worker_1: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_worker_1: Matching MAC address for NAT networking...
==> docker_worker_1: Checking if box 'ubuntu/focal64' version '20211015.0.0' is up to date...
==> docker_worker_1: Setting the name of the VM: docker_worker_1
==> docker_worker_1: Fixed port collision for 22 => 2222. Now on port 2200.
==> docker_worker_1: Clearing any previously set network interfaces...
==> docker_worker_1: Preparing network interfaces based on configuration...
    docker_worker_1: Adapter 1: nat
    docker_worker_1: Adapter 2: bridged
==> docker_worker_1: Forwarding ports...
    docker_worker_1: 22 (guest) => 2200 (host) (adapter 1)
==> docker_worker_1: Running 'pre-boot' VM customizations...
==> docker_worker_1: Booting VM...
==> docker_worker_1: Waiting for machine to boot. This may take a few minutes...
    docker_worker_1: SSH address: 127.0.0.1:2200
    docker_worker_1: SSH username: vagrant
    docker_worker_1: SSH auth method: private key
    docker_worker_1: 
    docker_worker_1: Vagrant insecure key detected. Vagrant will automatically replace
    docker_worker_1: this with a newly generated keypair for better security.
    docker_worker_1: 
    docker_worker_1: Inserting generated public key within guest...
    docker_worker_1: Removing insecure key from the guest if it's present...
    docker_worker_1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_worker_1: Machine booted and ready!
==> docker_worker_1: Checking for guest additions in VM...
==> docker_worker_1: Configuring and enabling network interfaces...
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
    docker_worker_1: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_worker_1: + sh -c apt-get update -qq >/dev/null
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_worker_1: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_worker_1: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_worker_1: + sh -c apt-get update -qq >/dev/null
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_worker_1: + version_gte 20.10
    docker_worker_1: + [ -z  ]
    docker_worker_1: + return 0
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_worker_1: + sh -c docker version
    docker_worker_1: Client: Docker Engine - Community
    docker_worker_1:  Version:           20.10.9
    docker_worker_1:  API version:       1.41
    docker_worker_1:  Go version:        go1.16.8
    docker_worker_1:  Git commit:        c2ea9bc
    docker_worker_1:  Built:             Mon Oct  4 16:08:29 2021
    docker_worker_1:  OS/Arch:           linux/amd64
    docker_worker_1:  Context:           default
    docker_worker_1:  Experimental:      true
    docker_worker_1: 
    docker_worker_1: Server: Docker Engine - Community
    docker_worker_1:  Engine:
    docker_worker_1:   Version:          20.10.9
    docker_worker_1:   API version:      1.41 (minimum version 1.12)
    docker_worker_1:   Go version:       go1.16.8
    docker_worker_1:   Git commit:       79ea9d3
    docker_worker_1:   Built:            Mon Oct  4 16:06:37 2021
    docker_worker_1:   OS/Arch:          linux/amd64
    docker_worker_1:   Experimental:     false
    docker_worker_1:  containerd:
    docker_worker_1:   Version:          1.4.11
    docker_worker_1:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_worker_1:  runc:
    docker_worker_1:   Version:          1.0.2
    docker_worker_1:   GitCommit:        v1.0.2-0-g52b36a2
    docker_worker_1:  docker-init:
    docker_worker_1:   Version:          0.19.0
    docker_worker_1:   GitCommit:        de40ad0
    docker_worker_1: 
    docker_worker_1: ================================================================================
    docker_worker_1: 
    docker_worker_1: To run Docker as a non-privileged user, consider setting up the
    docker_worker_1: Docker daemon in rootless mode for your user:
    docker_worker_1: 
    docker_worker_1:     dockerd-rootless-setuptool.sh install
    docker_worker_1: 
    docker_worker_1: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_worker_1: 
    docker_worker_1: 
    docker_worker_1: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_worker_1: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_worker_1: 
    docker_worker_1: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_worker_1:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_worker_1:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_worker_1: 
    docker_worker_1: ================================================================================
    docker_worker_1: 
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
FIM DO VAGRANT, MÁQUINA docker_worker_1: 2021-10-19 às 01:15:12.
INÍCIO DO VAGRANT, MÁQUINA docker_worker_2: 2021-10-19 às 01:15:17.
Bringing machine 'docker_worker_2' up with 'virtualbox' provider...
==> docker_worker_2: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_worker_2: Matching MAC address for NAT networking...
==> docker_worker_2: Checking if box 'ubuntu/focal64' version '20211015.0.0' is up to date...
==> docker_worker_2: Setting the name of the VM: docker_worker_2
==> docker_worker_2: Fixed port collision for 22 => 2222. Now on port 2201.
==> docker_worker_2: Clearing any previously set network interfaces...
==> docker_worker_2: Preparing network interfaces based on configuration...
    docker_worker_2: Adapter 1: nat
    docker_worker_2: Adapter 2: bridged
==> docker_worker_2: Forwarding ports...
    docker_worker_2: 22 (guest) => 2201 (host) (adapter 1)
==> docker_worker_2: Running 'pre-boot' VM customizations...
==> docker_worker_2: Booting VM...
==> docker_worker_2: Waiting for machine to boot. This may take a few minutes...
    docker_worker_2: SSH address: 127.0.0.1:2201
    docker_worker_2: SSH username: vagrant
    docker_worker_2: SSH auth method: private key
    docker_worker_2: 
    docker_worker_2: Vagrant insecure key detected. Vagrant will automatically replace
    docker_worker_2: this with a newly generated keypair for better security.
    docker_worker_2: 
    docker_worker_2: Inserting generated public key within guest...
    docker_worker_2: Removing insecure key from the guest if it's present...
    docker_worker_2: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_worker_2: Machine booted and ready!
==> docker_worker_2: Checking for guest additions in VM...
==> docker_worker_2: Configuring and enabling network interfaces...
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
    docker_worker_2: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_worker_2: + sh -c apt-get update -qq >/dev/null
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_worker_2: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_worker_2: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_worker_2: + sh -c apt-get update -qq >/dev/null
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_worker_2: + version_gte 20.10
    docker_worker_2: + [ -z  ]
    docker_worker_2: + return 0
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_worker_2: + sh -c docker version
    docker_worker_2: Client: Docker Engine - Community
    docker_worker_2:  Version:           20.10.9
    docker_worker_2:  API version:       1.41
    docker_worker_2:  Go version:        go1.16.8
    docker_worker_2:  Git commit:        c2ea9bc
    docker_worker_2:  Built:             Mon Oct  4 16:08:29 2021
    docker_worker_2:  OS/Arch:           linux/amd64
    docker_worker_2:  Context:           default
    docker_worker_2:  Experimental:      true
    docker_worker_2: 
    docker_worker_2: Server: Docker Engine - Community
    docker_worker_2:  Engine:
    docker_worker_2:   Version:          20.10.9
    docker_worker_2:   API version:      1.41 (minimum version 1.12)
    docker_worker_2:   Go version:       go1.16.8
    docker_worker_2:   Git commit:       79ea9d3
    docker_worker_2:   Built:            Mon Oct  4 16:06:37 2021
    docker_worker_2:   OS/Arch:          linux/amd64
    docker_worker_2:   Experimental:     false
    docker_worker_2:  containerd:
    docker_worker_2:   Version:          1.4.11
    docker_worker_2:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_worker_2:  runc:
    docker_worker_2:   Version:          1.0.2
    docker_worker_2:   GitCommit:        v1.0.2-0-g52b36a2
    docker_worker_2:  docker-init:
    docker_worker_2:   Version:          0.19.0
    docker_worker_2:   GitCommit:        de40ad0
    docker_worker_2: 
    docker_worker_2: ================================================================================
    docker_worker_2: 
    docker_worker_2: To run Docker as a non-privileged user, consider setting up the
    docker_worker_2: Docker daemon in rootless mode for your user:
    docker_worker_2: 
    docker_worker_2:     dockerd-rootless-setuptool.sh install
    docker_worker_2: 
    docker_worker_2: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_worker_2: 
    docker_worker_2: 
    docker_worker_2: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_worker_2: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_worker_2: 
    docker_worker_2: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_worker_2:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_worker_2:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_worker_2: 
    docker_worker_2: ================================================================================
    docker_worker_2: 
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
FIM DO VAGRANT, MÁQUINA docker_worker_2: 2021-10-19 às 01:16:42.
Remoção de arquivos de HOST de SSH em: ~/.ssh/known_hosts:  2021-10-19 às 01:16:47.

PLAY [all] *********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [192.168.1.50]
fatal: [192.168.1.51]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.1.51 port 22: Connection timed out", "unreachable": true}
fatal: [192.168.1.52]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.1.52 port 22: Connection timed out", "unreachable": true}

TASK [ssh : Start ssh] *********************************************************
changed: [192.168.1.50]

PLAY RECAP *********************************************************************
192.168.1.50               : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
192.168.1.51               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
192.168.1.52               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   

FIM DO SCRIPT criar_maquinas_virtuais_swarm, TEMPO GASTO EM ESPERA 10 SEGUNDOS em: 2021-10-19 às 01:16:58.
