ComeÃ§o do scrpit docker_swarm em: 2021-10-18 Ã s 15:51:19.
RemoÃ§Ã£o de arquivos de HOST de SSH em: /home/dev/.ssh/known_hosts:  2021-10-18 Ã s 15:51:19.
InicializaÃ§Ã£o VAGRANT da mÃ¡quina virtual docker_manager em: 2021-10-18 Ã s 15:51:20.
Bringing machine 'docker_manager' up with 'virtualbox' provider...
Bringing machine 'docker_worker_1' up with 'virtualbox' provider...
Bringing machine 'docker_worker_2' up with 'virtualbox' provider...
==> docker_manager: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_manager: Matching MAC address for NAT networking...
==> docker_manager: Checking if box 'ubuntu/focal64' version '20210831.0.0' is up to date...
==> docker_manager: Setting the name of the VM: docker_manager
==> docker_manager: Clearing any previously set network interfaces...
==> docker_manager: Preparing network interfaces based on configuration...
    docker_manager: Adapter 1: nat
    docker_manager: Adapter 2: bridged
==> docker_manager: Forwarding ports...
    docker_manager: 22 (guest) => 2222 (host) (adapter 1)
==> docker_manager: Running 'pre-boot' VM customizations...
==> docker_manager: Booting VM...
==> docker_manager: Waiting for machine to boot. This may take a few minutes...
    docker_manager: SSH address: 127.0.0.1:2222
    docker_manager: SSH username: vagrant
    docker_manager: SSH auth method: private key
    docker_manager: Warning: Connection reset. Retrying...
    docker_manager: Warning: Remote connection disconnect. Retrying...
    docker_manager: 
    docker_manager: Vagrant insecure key detected. Vagrant will automatically replace
    docker_manager: this with a newly generated keypair for better security.
    docker_manager: 
    docker_manager: Inserting generated public key within guest...
    docker_manager: Removing insecure key from the guest if it's present...
    docker_manager: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_manager: Machine booted and ready!
==> docker_manager: Checking for guest additions in VM...
==> docker_manager: Configuring and enabling network interfaces...
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
    docker_manager: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_manager: + sh -c apt-get update -qq >/dev/null
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_manager: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_manager: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_manager: + sh -c apt-get update -qq >/dev/null
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_manager: + version_gte 20.10
    docker_manager: + [ -z  ]
    docker_manager: + return 0
    docker_manager: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_manager: + sh -c docker version
    docker_manager: Client: Docker Engine - Community
    docker_manager:  Version:           20.10.9
    docker_manager:  API version:       1.41
    docker_manager:  Go version:        go1.16.8
    docker_manager:  Git commit:        c2ea9bc
    docker_manager:  Built:             Mon Oct  4 16:08:29 2021
    docker_manager:  OS/Arch:           linux/amd64
    docker_manager:  Context:           default
    docker_manager:  Experimental:      true
    docker_manager: 
    docker_manager: Server: Docker Engine - Community
    docker_manager:  Engine:
    docker_manager:   Version:          20.10.9
    docker_manager:   API version:      1.41 (minimum version 1.12)
    docker_manager:   Go version:       go1.16.8
    docker_manager:   Git commit:       79ea9d3
    docker_manager:   Built:            Mon Oct  4 16:06:37 2021
    docker_manager:   OS/Arch:          linux/amd64
    docker_manager:   Experimental:     false
    docker_manager:  containerd:
    docker_manager:   Version:          1.4.11
    docker_manager:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_manager:  runc:
    docker_manager:   Version:          1.0.2
    docker_manager:   GitCommit:        v1.0.2-0-g52b36a2
    docker_manager:  docker-init:
    docker_manager:   Version:          0.19.0
    docker_manager:   GitCommit:        de40ad0
    docker_manager: 
    docker_manager: ================================================================================
    docker_manager: 
    docker_manager: To run Docker as a non-privileged user, consider setting up the
    docker_manager: Docker daemon in rootless mode for your user:
    docker_manager: 
    docker_manager:     dockerd-rootless-setuptool.sh install
    docker_manager: 
    docker_manager: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_manager: 
    docker_manager: 
    docker_manager: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_manager: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_manager: 
    docker_manager: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_manager:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_manager:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_manager: 
    docker_manager: ================================================================================
    docker_manager: 
==> docker_manager: Running provisioner: shell...
    docker_manager: Running: inline script
==> docker_worker_1: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_worker_1: Matching MAC address for NAT networking...
==> docker_worker_1: Checking if box 'ubuntu/focal64' version '20210831.0.0' is up to date...
==> docker_worker_1: Setting the name of the VM: docker_worker_1
==> docker_worker_1: Fixed port collision for 22 => 2222. Now on port 2200.
==> docker_worker_1: Clearing any previously set network interfaces...
==> docker_worker_1: Preparing network interfaces based on configuration...
    docker_worker_1: Adapter 1: nat
    docker_worker_1: Adapter 2: bridged
==> docker_worker_1: Forwarding ports...
    docker_worker_1: 22 (guest) => 2200 (host) (adapter 1)
==> docker_worker_1: Running 'pre-boot' VM customizations...
==> docker_worker_1: Booting VM...
==> docker_worker_1: Waiting for machine to boot. This may take a few minutes...
    docker_worker_1: SSH address: 127.0.0.1:2200
    docker_worker_1: SSH username: vagrant
    docker_worker_1: SSH auth method: private key
    docker_worker_1: Warning: Connection reset. Retrying...
    docker_worker_1: Warning: Remote connection disconnect. Retrying...
    docker_worker_1: 
    docker_worker_1: Vagrant insecure key detected. Vagrant will automatically replace
    docker_worker_1: this with a newly generated keypair for better security.
    docker_worker_1: 
    docker_worker_1: Inserting generated public key within guest...
    docker_worker_1: Removing insecure key from the guest if it's present...
    docker_worker_1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_worker_1: Machine booted and ready!
==> docker_worker_1: Checking for guest additions in VM...
==> docker_worker_1: Configuring and enabling network interfaces...
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
    docker_worker_1: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_worker_1: + sh -c apt-get update -qq >/dev/null
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_worker_1: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_worker_1: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_worker_1: + sh -c apt-get update -qq >/dev/null
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_worker_1: + version_gte 20.10
    docker_worker_1: + [ -z  ]
    docker_worker_1: + return 0
    docker_worker_1: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_worker_1: + sh -c docker version
    docker_worker_1: Client: Docker Engine - Community
    docker_worker_1:  Version:           20.10.9
    docker_worker_1:  API version:       1.41
    docker_worker_1:  Go version:        go1.16.8
    docker_worker_1:  Git commit:        c2ea9bc
    docker_worker_1:  Built:             Mon Oct  4 16:08:29 2021
    docker_worker_1:  OS/Arch:           linux/amd64
    docker_worker_1:  Context:           default
    docker_worker_1:  Experimental:      true
    docker_worker_1: 
    docker_worker_1: Server: Docker Engine - Community
    docker_worker_1:  Engine:
    docker_worker_1:   Version:          20.10.9
    docker_worker_1:   API version:      1.41 (minimum version 1.12)
    docker_worker_1:   Go version:       go1.16.8
    docker_worker_1:   Git commit:       79ea9d3
    docker_worker_1:   Built:            Mon Oct  4 16:06:37 2021
    docker_worker_1:   OS/Arch:          linux/amd64
    docker_worker_1:   Experimental:     false
    docker_worker_1:  containerd:
    docker_worker_1:   Version:          1.4.11
    docker_worker_1:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_worker_1:  runc:
    docker_worker_1:   Version:          1.0.2
    docker_worker_1:   GitCommit:        v1.0.2-0-g52b36a2
    docker_worker_1:  docker-init:
    docker_worker_1:   Version:          0.19.0
    docker_worker_1:   GitCommit:        de40ad0
    docker_worker_1: 
    docker_worker_1: ================================================================================
    docker_worker_1: 
    docker_worker_1: To run Docker as a non-privileged user, consider setting up the
    docker_worker_1: Docker daemon in rootless mode for your user:
    docker_worker_1: 
    docker_worker_1:     dockerd-rootless-setuptool.sh install
    docker_worker_1: 
    docker_worker_1: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_worker_1: 
    docker_worker_1: 
    docker_worker_1: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_worker_1: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_worker_1: 
    docker_worker_1: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_worker_1:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_worker_1:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_worker_1: 
    docker_worker_1: ================================================================================
    docker_worker_1: 
==> docker_worker_1: Running provisioner: shell...
    docker_worker_1: Running: inline script
==> docker_worker_2: Importing base box 'ubuntu/focal64'...
[KProgress: 90%[K==> docker_worker_2: Matching MAC address for NAT networking...
==> docker_worker_2: Checking if box 'ubuntu/focal64' version '20210831.0.0' is up to date...
==> docker_worker_2: Setting the name of the VM: docker_worker_2
==> docker_worker_2: Fixed port collision for 22 => 2222. Now on port 2201.
==> docker_worker_2: Clearing any previously set network interfaces...
==> docker_worker_2: Preparing network interfaces based on configuration...
    docker_worker_2: Adapter 1: nat
    docker_worker_2: Adapter 2: bridged
==> docker_worker_2: Forwarding ports...
    docker_worker_2: 22 (guest) => 2201 (host) (adapter 1)
==> docker_worker_2: Running 'pre-boot' VM customizations...
==> docker_worker_2: Booting VM...
==> docker_worker_2: Waiting for machine to boot. This may take a few minutes...
    docker_worker_2: SSH address: 127.0.0.1:2201
    docker_worker_2: SSH username: vagrant
    docker_worker_2: SSH auth method: private key
    docker_worker_2: Warning: Remote connection disconnect. Retrying...
    docker_worker_2: Warning: Connection reset. Retrying...
    docker_worker_2: 
    docker_worker_2: Vagrant insecure key detected. Vagrant will automatically replace
    docker_worker_2: this with a newly generated keypair for better security.
    docker_worker_2: 
    docker_worker_2: Inserting generated public key within guest...
    docker_worker_2: Removing insecure key from the guest if it's present...
    docker_worker_2: Key inserted! Disconnecting and reconnecting using new SSH key...
==> docker_worker_2: Machine booted and ready!
==> docker_worker_2: Checking for guest additions in VM...
==> docker_worker_2: Configuring and enabling network interfaces...
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
    docker_worker_2: # Executing docker install script, commit: 93d2499759296ac1f9c510605fef85052a2c32be
    docker_worker_2: + sh -c apt-get update -qq >/dev/null
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
    docker_worker_2: + sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
    docker_worker_2: + sh -c echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" > /etc/apt/sources.list.d/docker.list
    docker_worker_2: + sh -c apt-get update -qq >/dev/null
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends  docker-ce-cli docker-scan-plugin docker-ce >/dev/null
    docker_worker_2: + version_gte 20.10
    docker_worker_2: + [ -z  ]
    docker_worker_2: + return 0
    docker_worker_2: + sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
    docker_worker_2: + sh -c docker version
    docker_worker_2: Client: Docker Engine - Community
    docker_worker_2:  Version:           20.10.9
    docker_worker_2:  API version:       1.41
    docker_worker_2:  Go version:        go1.16.8
    docker_worker_2:  Git commit:        c2ea9bc
    docker_worker_2:  Built:             Mon Oct  4 16:08:29 2021
    docker_worker_2:  OS/Arch:           linux/amd64
    docker_worker_2:  Context:           default
    docker_worker_2:  Experimental:      true
    docker_worker_2: 
    docker_worker_2: Server: Docker Engine - Community
    docker_worker_2:  Engine:
    docker_worker_2:   Version:          20.10.9
    docker_worker_2:   API version:      1.41 (minimum version 1.12)
    docker_worker_2:   Go version:       go1.16.8
    docker_worker_2:   Git commit:       79ea9d3
    docker_worker_2:   Built:            Mon Oct  4 16:06:37 2021
    docker_worker_2:   OS/Arch:          linux/amd64
    docker_worker_2:   Experimental:     false
    docker_worker_2:  containerd:
    docker_worker_2:   Version:          1.4.11
    docker_worker_2:   GitCommit:        5b46e404f6b9f661a205e28d59c982d3634148f8
    docker_worker_2:  runc:
    docker_worker_2:   Version:          1.0.2
    docker_worker_2:   GitCommit:        v1.0.2-0-g52b36a2
    docker_worker_2:  docker-init:
    docker_worker_2:   Version:          0.19.0
    docker_worker_2:   GitCommit:        de40ad0
    docker_worker_2: 
    docker_worker_2: ================================================================================
    docker_worker_2: 
    docker_worker_2: To run Docker as a non-privileged user, consider setting up the
    docker_worker_2: Docker daemon in rootless mode for your user:
    docker_worker_2: 
    docker_worker_2:     dockerd-rootless-setuptool.sh install
    docker_worker_2: 
    docker_worker_2: Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.
    docker_worker_2: 
    docker_worker_2: 
    docker_worker_2: To run the Docker daemon as a fully privileged service, but granting non-root
    docker_worker_2: users access, refer to https://docs.docker.com/go/daemon-access/
    docker_worker_2: 
    docker_worker_2: WARNING: Access to the remote API on a privileged Docker daemon is equivalent
    docker_worker_2:          to root access on the host. Refer to the 'Docker daemon attack surface'
    docker_worker_2:          documentation for details: https://docs.docker.com/go/attack-surface/
    docker_worker_2: 
    docker_worker_2: ================================================================================
    docker_worker_2: 
==> docker_worker_2: Running provisioner: shell...
    docker_worker_2: Running: inline script
MÃ¡quinas docker_manager docker_worker_1  docker_worker_2 inicializadas, tempo de espera de  para normalizaÃ§Ã£o do uso de processamento: 2021-10-18 Ã s 15:57:43.
ComeÃ§o do scrpit docker_swarm em: 2021-10-18 Ã s 15:57:59.
InicializaÃ§Ã£o ANSIBLE docker API  em: 2021-10-18 Ã s 15:57:59.
